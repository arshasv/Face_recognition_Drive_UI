{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Arsha/face-recognition-ui/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Card, CardContent, Button, Typography } from \"@mui/material\";\nimport FileUpload from \"../components/FileUpload\";\nimport ImageSelect from \"../components/ImageSelect\";\nimport ScanButton from \"../components/ScanButton\";\nimport Header from \"../components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [folder, setFolder] = useState(null);\n  const [image, setImage] = useState(null);\n  const [imageList, setImageList] = useState([]);\n  const handleFolderUpload = event => {\n    const files = event.target.files;\n    if (files) {\n      setFolder(files);\n      setImageList(Array.from(files).map(file => file.name));\n    }\n  };\n  const handleImageSelect = event => {\n    setImage(event.target.value);\n  };\n  const handleScan = () => {\n    if (!image) {\n      alert(\"Please select an image to scan.\");\n      return;\n    }\n    console.log(\"Scanning image:\", image);\n    // Add Azure Vision API call here\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 400,\n      margin: \"auto\",\n      mt: 5,\n      p: 3,\n      textAlign: \"center\",\n      boxShadow: 3,\n      borderRadius: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        fontWeight: \"bold\",\n        gutterBottom: true,\n        children: \"PersonaScan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        component: \"label\",\n        sx: {\n          mb: 2,\n          py: 1.5\n        },\n        children: [\"Upload Folder\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          webkitdirectory: \"\",\n          directory: \"\",\n          hidden: true,\n          onChange: handleFolderUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), imageList.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        component: \"label\",\n        sx: {\n          mb: 2,\n          py: 1.5\n        },\n        children: [\"Reference Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          hidden: true,\n          onChange: handleImageSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        fullWidth: true,\n        sx: {\n          py: 1.5\n        },\n        onClick: handleScan,\n        children: \"Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"ekVduOZk8Fr3vX+pHEHXYrHtmzI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Card","CardContent","Button","Typography","FileUpload","ImageSelect","ScanButton","Header","jsxDEV","_jsxDEV","Home","_s","folder","setFolder","image","setImage","imageList","setImageList","handleFolderUpload","event","files","target","Array","from","map","file","name","handleImageSelect","value","handleScan","alert","console","log","sx","maxWidth","margin","mt","p","textAlign","boxShadow","borderRadius","children","variant","fontWeight","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","fullWidth","component","mb","py","type","webkitdirectory","directory","hidden","onChange","length","onClick","_c","$RefreshReg$"],"sources":["/home/dell/Desktop/Arsha/face-recognition-ui/src/pages/Home.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Card, CardContent, Button, Typography } from \"@mui/material\";\nimport FileUpload from \"../components/FileUpload\";\nimport ImageSelect from \"../components/ImageSelect\";\nimport ScanButton from \"../components/ScanButton\";\nimport Header from \"../components/Header\";\n\nconst Home = () => {\n  const [folder, setFolder] = useState(null);\n  const [image, setImage] = useState(null);\n  const [imageList, setImageList] = useState([]);\n\n  const handleFolderUpload = (event) => {\n    const files = event.target.files;\n    if (files) {\n      setFolder(files);\n      setImageList(Array.from(files).map((file) => file.name));\n    }\n  };\n\n  const handleImageSelect = (event) => {\n    setImage(event.target.value);\n  };\n\n  const handleScan = () => {\n    if (!image) {\n      alert(\"Please select an image to scan.\");\n      return;\n    }\n    console.log(\"Scanning image:\", image);\n    // Add Azure Vision API call here\n  };\n\n  return (\n    <Card sx={{ maxWidth: 400, margin: \"auto\", mt: 5, p: 3, textAlign: \"center\", boxShadow: 3, borderRadius: 2 }}>\n      <CardContent>\n        <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\n          PersonaScan\n        </Typography>\n        <Button variant=\"contained\" color=\"primary\" fullWidth component=\"label\" sx={{ mb: 2, py: 1.5 }}>\n          Upload Folder\n          <input type=\"file\" webkitdirectory=\"\" directory=\"\" hidden onChange={handleFolderUpload} />\n        </Button>\n        {imageList.length > 0 && (\n          <Button variant=\"contained\" color=\"primary\" fullWidth component=\"label\" sx={{ mb: 2, py: 1.5 }}>\n            Reference Image\n            <input type=\"file\" hidden onChange={handleImageSelect} />\n          </Button>\n        )}\n        <Button variant=\"contained\" color=\"success\" fullWidth sx={{ py: 1.5 }} onClick={handleScan}>\n          Scan\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}