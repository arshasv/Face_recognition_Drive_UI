{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Arsha/face-recognition-ui_Drive/src/pages/Home.js\",\n  _s = $RefreshSig$();\n// src/pages/Home.js\nimport React, { useState } from \"react\";\nimport { Card, CardContent, Button, Typography, Grid, Paper, TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [googleDriveFolderId, setGoogleDriveFolderId] = useState(\"\");\n  const [referenceImageUrl, setReferenceImageUrl] = useState(\"\");\n  const [matchedImages, setMatchedImages] = useState([]);\n  const extractFolderId = url => {\n    const match = url.match(/[-\\w]{25,}/);\n    return match ? match[0] : null;\n  };\n  const handleFetchImages = async () => {\n    const folderId = extractFolderId(driveLink);\n    if (!folderId) {\n      alert(\"Invalid Google Drive link\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8000/fetch-images?folder_id=${folderId}`);\n      const data = await response.json();\n      setImageList(data.images);\n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n    }\n  };\n  const handleImageSelect = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setReferenceImage(URL.createObjectURL(file));\n    }\n  };\n  const handleScan = async () => {\n    if (!googleDriveFolderId || !referenceImageUrl) {\n      alert(\"Please provide Google Drive folder link and upload a reference image.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/scan\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          reference_image_url: referenceImageUrl,\n          folder_id: googleDriveFolderId\n        })\n      });\n      const data = await response.json();\n      if (data.matched_images.length > 0) {\n        setMatchedImages(data.matched_images);\n      } else {\n        alert(\"No matching faces found.\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Error scanning images.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 600,\n      margin: \"auto\",\n      mt: 5,\n      p: 3,\n      textAlign: \"center\",\n      boxShadow: 3,\n      borderRadius: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        fontWeight: \"bold\",\n        gutterBottom: true,\n        children: \"PersonaScan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Google Drive Folder Link\",\n        variant: \"outlined\",\n        value: driveLink,\n        onChange: e => setDriveLink(e.target.value),\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        sx: {\n          mb: 2\n        },\n        onClick: handleFetchImages,\n        children: \"Fetch Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        justifyContent: \"center\",\n        sx: {\n          mb: 2,\n          overflowX: \"auto\",\n          flexWrap: \"nowrap\"\n        },\n        children: imageList.map((src, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              width: 80,\n              height: 80,\n              overflow: \"hidden\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: src,\n              alt: `uploaded-${index}`,\n              style: {\n                width: \"100%\",\n                height: \"100%\",\n                objectFit: \"cover\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        component: \"label\",\n        sx: {\n          mb: 2\n        },\n        children: [\"Upload Reference Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          hidden: true,\n          onChange: handleImageSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), referenceImage && /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: 80,\n          height: 80,\n          overflow: \"hidden\",\n          margin: \"auto\",\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: referenceImage,\n          alt: \"reference\",\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            objectFit: \"cover\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        fullWidth: true,\n        sx: {\n          py: 1.5\n        },\n        onClick: handleScan,\n        children: \"Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"W3oxGiXEG3Bc6kzQB03Gt84lQKQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Card","CardContent","Button","Typography","Grid","Paper","TextField","jsxDEV","_jsxDEV","Home","_s","googleDriveFolderId","setGoogleDriveFolderId","referenceImageUrl","setReferenceImageUrl","matchedImages","setMatchedImages","extractFolderId","url","match","handleFetchImages","folderId","driveLink","alert","response","fetch","data","json","setImageList","images","error","console","handleImageSelect","event","file","target","files","setReferenceImage","URL","createObjectURL","handleScan","method","headers","body","JSON","stringify","reference_image_url","folder_id","matched_images","length","sx","maxWidth","margin","mt","p","textAlign","boxShadow","borderRadius","children","variant","fontWeight","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","label","value","onChange","e","setDriveLink","mb","color","onClick","container","spacing","justifyContent","overflowX","flexWrap","imageList","map","src","index","item","width","height","overflow","alt","style","objectFit","component","type","hidden","referenceImage","py","_c","$RefreshReg$"],"sources":["/home/dell/Desktop/Arsha/face-recognition-ui_Drive/src/pages/Home.js"],"sourcesContent":["// src/pages/Home.js\nimport React, { useState } from \"react\";\nimport { Card, CardContent, Button, Typography, Grid, Paper, TextField } from \"@mui/material\";\n\nconst Home = () => {\n    const [googleDriveFolderId, setGoogleDriveFolderId] = useState(\"\");\n    const [referenceImageUrl, setReferenceImageUrl] = useState(\"\");\n    const [matchedImages, setMatchedImages] = useState([]);\n\n  const extractFolderId = (url) => {\n    const match = url.match(/[-\\w]{25,}/);\n    return match ? match[0] : null;\n  };\n\n  const handleFetchImages = async () => {\n    const folderId = extractFolderId(driveLink);\n    if (!folderId) {\n      alert(\"Invalid Google Drive link\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8000/fetch-images?folder_id=${folderId}`);\n      const data = await response.json();\n      setImageList(data.images);\n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n    }\n  };\n\n  const handleImageSelect = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setReferenceImage(URL.createObjectURL(file));\n    }\n  };\n\n  const handleScan = async () => {\n    if (!googleDriveFolderId || !referenceImageUrl) {\n        alert(\"Please provide Google Drive folder link and upload a reference image.\");\n        return;\n    }\n\n    try {\n        const response = await fetch(\"http://127.0.0.1:8000/scan\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                reference_image_url: referenceImageUrl,\n                folder_id: googleDriveFolderId,\n            }),\n        });\n\n        const data = await response.json();\n        if (data.matched_images.length > 0) {\n            setMatchedImages(data.matched_images);\n        } else {\n            alert(\"No matching faces found.\");\n        }\n    } catch (error) {\n        console.error(\"Error:\", error);\n        alert(\"Error scanning images.\");\n    }\n};\n\n  return (\n    <Card sx={{ maxWidth: 600, margin: \"auto\", mt: 5, p: 3, textAlign: \"center\", boxShadow: 3, borderRadius: 2 }}>\n      <CardContent>\n        <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\n          PersonaScan\n        </Typography>\n        <TextField\n          fullWidth\n          label=\"Google Drive Folder Link\"\n          variant=\"outlined\"\n          value={driveLink}\n          onChange={(e) => setDriveLink(e.target.value)}\n          sx={{ mb: 2 }}\n        />\n        <Button variant=\"contained\" color=\"primary\" fullWidth sx={{ mb: 2 }} onClick={handleFetchImages}>\n          Fetch Images\n        </Button>\n        {/* Display images from Google Drive */}\n        <Grid container spacing={1} justifyContent=\"center\" sx={{ mb: 2, overflowX: \"auto\", flexWrap: \"nowrap\" }}>\n          {imageList.map((src, index) => (\n            <Grid item key={index}>\n              <Paper sx={{ width: 80, height: 80, overflow: \"hidden\" }}>\n                <img src={src} alt={`uploaded-${index}`} style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }} />\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n        {/* Reference Image Selection */}\n        <Button variant=\"contained\" color=\"primary\" fullWidth component=\"label\" sx={{ mb: 2 }}>\n          Upload Reference Image\n          <input type=\"file\" hidden onChange={handleImageSelect} />\n        </Button>\n        {/* Display Reference Image */}\n        {referenceImage && (\n          <Paper sx={{ width: 80, height: 80, overflow: \"hidden\", margin: \"auto\", mb: 2 }}>\n            <img src={referenceImage} alt=\"reference\" style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }} />\n          </Paper>\n        )}\n        <Button variant=\"contained\" color=\"success\" fullWidth sx={{ py: 1.5 }} onClick={handleScan}>\n          Scan\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}